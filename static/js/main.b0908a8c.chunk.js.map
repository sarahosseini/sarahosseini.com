{"version":3,"sources":["assets/images/aboutme.jpg","components/header.js","components/aboutme.js","components/experience.js","components/projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","class","href","to","className","React","Component","AboutMe","src","AboutPic","target","Experience","Projects","App","basename","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,qC,0RCuB5BC,G,6KAhBX,OACI,yBAAKC,MAAM,UACP,yBAAKA,MAAM,kBACP,uBAAGA,MAAM,oBAAoBC,KAAK,KAAlC,kBAEJ,yBAAKD,MAAM,mBACP,kBAAC,IAAD,CAAME,GAAG,aAAaC,UAAW,gBAAjC,QACA,kBAAC,IAAD,CAAMD,GAAG,UAAUC,UAAW,gBAA9B,YACA,kBAAC,IAAD,CAAMD,GAAG,MAAMC,UAAW,gBAA1B,OACA,kBAAC,IAAD,CAAMD,GAAG,IAAIC,UAAW,gBAAxB,yB,GAXKC,IAAMC,Y,iBCyCZC,G,6KAvCX,OACI,6BACI,yBAAKN,MAAM,mBACP,yBAAKO,IAAKC,IAAUR,MAAM,cAC1B,yBAAKA,MAAM,iBACP,wBAAIA,MAAM,eAAV,cACA,+KAGA,qSAIA,iDACA,yBAAKA,MAAM,WACP,uBAAGS,OAAO,SAASR,KAAK,kCAAkCD,MAAM,eAAc,uBAAGA,MAAM,kBACvF,uBAAGS,OAAO,SAASR,KAAK,6CAA6CD,MAAM,eAAc,uBAAGA,MAAM,oBAClG,uBAAGS,OAAO,SAASR,KAAK,oCAAoCD,MAAM,eAAc,uBAAGA,MAAM,uBAIrG,yBAAKA,MAAM,mBACP,yBAAKA,MAAM,iBACP,wBAAIA,MAAM,kBAAV,qBACA,kaAKJ,yBAAKA,MAAM,iBACP,wBAAIA,MAAM,kBAAV,sJACA,gG,GAjCEI,IAAMC,YCWbK,G,6KAVX,OACI,6BACI,yBAAKV,MAAM,wBACT,wBAAIA,MAAM,oBAAV,sB,GALWI,IAAMC,YCYhBM,G,6KAVX,OACI,6BACI,yBAAKX,MAAM,qBACT,wBAAIA,MAAM,iBAAV,sB,GALSI,IAAMC,Y,eCkCdO,MA9Bf,WACE,OACE,yBAAKT,UAAU,OACb,kBAAC,IAAD,CAAQU,SAAS,KACf,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOC,KAAK,eACV,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,QACV,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,MACA,kBAAC,EAAD,WChBQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b0908a8c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aboutme.edd9f270.jpg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport '../assets/styles/header.css';\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n        <nav class=\"navbar\">\r\n            <div class=\"left-container\">\r\n                <a class=\"navbar-brand logo\" href=\"/\">Sara Hosseini</a>\r\n            </div>\r\n            <div class=\"right-container\">\r\n                <Link to='experience' className={\"navbar-brand\"}>Work</Link>\r\n                <Link to='project' className={\"navbar-brand\"}>Projects</Link>\r\n                <Link to='art' className={\"navbar-brand\"}>Art</Link>\r\n                <Link to='/' className={\"navbar-brand\"}>About + Connect</Link>\r\n            </div>\r\n        </nav>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport AboutPic from '../assets/images/aboutme.jpg';\r\nimport ReactDOM from 'react-dom';\r\nimport '../assets/styles/aboutme.css';\r\n\r\nclass AboutMe extends React.Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div class=\"about-container\">\r\n                <img src={AboutPic} class=\"about-img\"></img>\r\n                <div class=\"about-section\">\r\n                    <h2 class=\"about-title\">About Sara</h2>\r\n                    <p> Hi, I'm Sara! I'm a 3rd year Software Engineering student at the University of Waterloo. \r\n                        I'm currently a Growth Product Manager at Shypyard.io.\r\n                    </p>\r\n                    <p> I'm passionate about Product Management, User Experience Design, and Front-End Development. \r\n                        At the end of the day, my goal is to create innovative solutions and understand the user's \r\n                        point-of-view to deliver a high-value product that user's can enjoy with ease. \r\n                    </p>\r\n                    <p>Let's chat! ☕</p>\r\n                    <div class=\"socials\">\r\n                        <a target=\"_blank\" href=\"https://github.com/sarahosseini\" class=\"social-logo\"><i class=\"fa fa-github\"></i></a>\r\n                        <a target=\"_blank\" href=\"https://www.linkedin.com/in/sara-hosseini/\" class=\"social-logo\"><i class=\"fa fa-linkedin\"></i></a>\r\n                        <a target=\"_blank\" href=\"mailto: sara.hosseini01@gmail.com\" class=\"social-logo\"><i class=\"fa fa-envelope\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"about-container\">\r\n                <div class=\"about-section\">\r\n                    <h2 class=\"about-subtitle\">Noteworthy Skills</h2>\r\n                    <p>C++ • C • Python • JavaScript • HTML • CSS • React • Git • SQL • Figma • Sketch \r\n                        • Personas • Prototyping • Wireframing • A/B Testing • User Research • User Stories \r\n                        • Data Analysis • Product Roadmaps • Tableau • Microsoft Office Suite \r\n                        • Jira • Trello • Agile Methodologies</p>\r\n                </div>\r\n                <div class=\"about-section\">\r\n                    <h2 class=\"about-subtitle\">\"Sara's in depth knowledge of development paired with her ability to lead a team makes her an incredible asset on any team as a product manager.\"</h2>\r\n                    <p> — Eric Gordon [Innovation Solutions Lead @ WSIB Lab]</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AboutMe","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../assets/styles/experience.css';\r\n\r\nclass Experience extends React.Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div class=\"experience-container\">\r\n              <h2 class=\"experience-title\">In Progress!</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Experience","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport '../assets/styles/projects.css';\r\n\r\nclass Projects extends React.Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n            <div class=\"project-container\">\r\n              <h2 class=\"project-title\">In Progress!</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Projects","import React from 'react';\r\nimport Header from './components/header.js';\r\nimport AboutMe from './components/aboutme.js';\r\nimport Experience from './components/experience.js';\r\nimport Projects from './components/projects.js';\r\nimport './assets/styles/App.css';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router basename='/'>\r\n        <Switch>\r\n\r\n          <Route path=\"/experience\">\r\n            <Header/>\r\n            <Experience />\r\n          </Route>\r\n          <Route path=\"/project\">\r\n            <Header/>\r\n            <Projects />\r\n          </Route>\r\n          <Route path=\"/art\">\r\n            <Header/>\r\n            <Projects />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Header/>\r\n            <AboutMe />\r\n\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}